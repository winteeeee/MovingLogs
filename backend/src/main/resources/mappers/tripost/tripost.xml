<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.features.tripost.adapter.out.persistence.mybatis.dao.TripostDao">
    <!-- INSERT -->
    <insert id="insert">
        INSERT INTO tripost (
            ID,
            UID,
            TITLE,
            DESCRIPTION,
            CONTENT,
            COMMENT_COUNT,
            LIKE_COUNT,
            VIEW_COUNT,
            IS_DELETED,
            CREATED_AT,
            UPDATED_AT
        )
        VALUES (
            #{tripost.id.id},
            #{tripost.author.uid.id},
            #{tripost.title},
            #{tripost.description},
            #{tripost.content},
            #{tripost.commentCount},
            #{tripost.likeCount},
            #{tripost.viewCount},
            #{tripost.isDeleted},
            #{tripost.createdAt},
            #{tripost.updatedAt}
        )
    </insert>

    <!-- UPDATE -->
    <update id="update">
        UPDATE tripost
        SET
            TITLE = #{tripost.title},
            DESCRIPTION = #{tripost.description},
            CONTENT = #{tripost.content},
            COMMENT_COUNT = #{tripost.commentCount},
            LIKE_COUNT = #{tripost.likeCount},
            VIEW_COUNT = #{tripost.viewCount},
            IS_DELETED = #{tripost.isDeleted},
            UPDATED_AT = #{tripost.updatedAt}
        WHERE ID = #{tripost.id.id}
    </update>

    <!-- VIEW COUNT 일괄 업데이트 -->
    <update id="updateAllViewCount">
        UPDATE tripost
        SET VIEW_COUNT =
            CASE ID
            <foreach collection="tripostViewCountList" item="item">
                WHEN #{item.tripostId.id} THEN #{item.viewCount}
            </foreach>
            END
        WHERE ID IN
        <foreach collection="tripostViewCountList" item="item" open="(" separator="," close=")">
            #{item.tripostId.id}
        </foreach>
    </update>

    <!-- LIKE COUNT 재계산 -->
    <update id="recountAllLikeCountById">
        UPDATE tripost T
        SET LIKE_COUNT = (
            SELECT COUNT(*) FROM tripost_like L
            WHERE L.TRIPOST_ID = T.ID
        )
        WHERE ID IN
        <foreach collection="tripostIds" item="id" open="(" separator="," close=")">
            #{id.id}
        </foreach>
    </update>

    <!-- COMMENT COUNT 재계산 -->
    <update id="recountCommentCountById">
        UPDATE tripost T
        SET COMMENT_COUNT = (
            SELECT COUNT(*) FROM tripost_comment TC
            WHERE TC.TRIPOST_ID = #{tripostId.id} AND TC.IS_DELETED = FALSE
        )
        WHERE ID = #{tripostId.id}
    </update>

    <!-- 단건 조회 (Tripost) -->
    <select id="findById">
        SELECT
            t.id                as `id`,
            t.uid               as `uid`,
            u.name              as `name`,
            t.title             as `title`,
            t.description       as `description`,
            t.content           as `content`,
            t.comment_count     as `comment_count`,
            t.like_count        as `like_count`,
            t.view_count        as `view_count`,
            t.is_deleted        as `is_deleted`,
            t.created_at        as `created_at`,
            t.updated_at        as `updated_at`,
            (
                SELECT
                    JSON_ARRAYAGG(
                        JSON_OBJECT(
                            'id', JSON_OBJECT('id', ws.id),
                            'attractionId', JSON_OBJECT('id', ws.attraction_id),
                            'images', (
                                SELECT JSON_ARRAYAGG(
                                    JSON_OBJECT(
                                        'imageId', JSON_OBJECT('id', wsi.image_id),
                                        'seq', wsi.seq
                                    )
                                )
                                FROM waypoint_snapshot_image wsi
                                WHERE wsi.waypoint_snapshot_id = ws.id
                            ),
                            'seq', ws.seq
                        )
                    )
                FROM waypoint_snapshot ws
                WHERE ws.tripost_id = t.id
            ) AS `waypoints`
        FROM tripost t
        JOIN user u ON t.uid = u.uid
        WHERE t.id = #{tripostId.id}
    </select>


    <!-- 상세 조회 (TripostDetailDto) -->
    <select id="findTripostDetailById">
        SELECT
            T.ID                as `id`,
            T.UID               as `uid`,
            U.NAME              as `name`,
            T.TITLE             as `title`,
            T.DESCRIPTION       as `description`,
            T.CONTENT           as `content`,
            T.COMMENT_COUNT     as `comment_count`,
            T.LIKE_COUNT        as `like_count`,
            T.VIEW_COUNT        as `view_count`,
            T.CREATED_AT        as `created_at`,
            T.UPDATED_AT        as `updated_at`,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'id', WS.ID,
                        'attractionId', A.ID,
                        'attractionName', A.TITLE,
                        'contentTypeName', CT.CONTENT_TYPE_NAME,
                        'addr1', A.ADDR1,
                        'latitude', A.LATITUDE,
                        'longitude', A.LONGITUDE,
                        'seq', WS.SEQ,
                        'images', (
                            SELECT JSON_ARRAYAGG(
                                JSON_OBJECT(
                                    'imageId', I.ID,
                                    'thumbnailUrl', I.THUMBNAIL_URL,
                                    'imageUrl', I.IMAGE_URL,
                                    'seq', WSI.SEQ
                                )
                            )
                            FROM waypoint_snapshot_image WSI
                                JOIN image I ON WSI.IMAGE_ID = I.ID
                            WHERE WSI.WAYPOINT_SNAPSHOT_ID = WS.ID
                        )
                    )
                )
                FROM waypoint_snapshot WS
                    JOIN attraction A ON WS.ATTRACTION_ID = A.ID
                    JOIN content_type CT ON A.CONTENT_TYPE_ID = CT.CONTENT_TYPE_ID
        WHERE WS.TRIPOST_ID = T.ID
            )                   as `waypoints`
        FROM tripost T JOIN user U ON T.UID = U.UID
        WHERE T.ID = #{tripostId.id}
    </select>

    <select id="findLatestTripostDetail">
        SELECT *
        FROM tripost t
        JOIN (
            SELECT t2.id, min(i.image_url) as image_url
            FROM tripost t2
            JOIN waypoint_snapshot ws ON t2.id = ws.tripost_id
            JOIN waypoint_snapshot_image wsi ON ws.id = wsi.waypoint_snapshot_id
            JOIN image i ON i.id = wsi.image_id
            WHERE i.image_url IS NOT NULL
            GROUP BY t2.id
        ) sub ON t.id = sub.id
        WHERE t.is_deleted = 0
        ORDER BY t.created_at DESC
        LIMIT #{size};
    </select>

    <!-- 페이징 목록 조회 -->
    <select id="selectPage">
        SELECT
            T.ID                    as `id`,
            T.UID                   as `uid`,
            U.NAME                  as `name`,
            T.TITLE                 as `title`,
            T.DESCRIPTION           as `description`,
            T.VIEW_COUNT            as `view_count`,
            T.LIKE_COUNT            as `like_count`,
            T.COMMENT_COUNT         as `comment_count`,
            T.CREATED_AT            as `created_at`,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'id', WS.ID,
                        'attractionId', WS.ATTRACTION_ID,
                        'attractionName', A.TITLE,
                        'latitude', A.LATITUDE,
                        'longitude', A.LONGITUDE,
                        'seq', WS.SEQ
                    )
                )
                FROM waypoint_snapshot WS JOIN attraction A ON WS.ATTRACTION_ID = A.ID
                WHERE WS.TRIPOST_ID = T.ID
            ) AS waypoints,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'imageId', I.ID,
                        'thumbnailUrl', I.THUMBNAIL_URL,
                        'imageUrl', I.IMAGE_URL,
                        'seq', WSI.SEQ
                    )
                )
                FROM waypoint_snapshot_image WSI
                    JOIN waypoint_snapshot WS ON WSI.WAYPOINT_SNAPSHOT_ID = WS.ID
                    JOIN image I ON WSI.IMAGE_ID = I.ID
                WHERE WS.TRIPOST_ID = T.ID
            )                       as `images`
        FROM tripost T JOIN user U ON T.UID = U.UID
        <where>
            NOT T.IS_DELETED
            <choose>
                <when test="criteria.type.name() == 'TITLE'">
                    AND T.TITLE LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type.name() == 'CONTENT'">
                    AND T.CONTENT LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type.name() == 'AUTHOR'">
                    AND T.NAME LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
            </choose>
        </where>
        ORDER BY T.CREATED_AT DESC
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <!-- 총 개수 조회 -->
    <select id="selectTotalCount" resultType="long">
        SELECT COUNT(*)
        FROM tripost T JOIN user U ON T.UID = U.UID
        <where>
            NOT T.IS_DELETED
            <choose>
                <when test="criteria.type.name() == 'TITLE'">
                    AND T.TITLE LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type.name() == 'CONTENT'">
                    AND T.CONTENT LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type.name() == 'AUTHOR'">
                    AND U.NAME LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
            </choose>
        </where>
    </select>

</mapper>
