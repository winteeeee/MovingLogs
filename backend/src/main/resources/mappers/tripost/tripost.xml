<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.features.tripost.adapter.out.persistence.mybatis.dao.TripostDao.java">
    <!-- INSERT -->
    <insert id="insert">
        INSERT INTO TRIPOST (
            ID,
            UID,
            TITLE,
            DESCRIPTION,
            CONTENT,
            COMMENT_COUNT,
            LIKE_COUNT,
            VIEW_COUNT,
            IS_DELETED,
            CREATED_AT,
            UPDATED_AT
        )
        VALUES (
            #{tripost.id.id},
            #{tripost.author.uid.id},
            #{tripost.title},
            #{tripost.description},
            #{tripost.content},
            #{tripost.commentCount},
            #{tripost.likeCount},
            #{tripost.viewCount},
            #{tripost.isDeleted},
            #{tripost.createdAt},
            #{tripost.updatedAt}
        )
    </insert>

    <!-- UPDATE -->
    <update id="update">
        UPDATE TRIPOST
        SET
            TITLE = #{title},
            DESCRIPTION = #{description},
            CONTENT = #{content},
            COMMENT_COUNT = #{commentCount},
            LIKE_COUNT = #{likeCount},
            VIEW_COUNT = #{viewCount},
            IS_DELETED = #{isDeleted},
            UPDATED_AT = #{updatedAt}
        WHERE ID = #{id.id}
    </update>

    <!-- VIEW COUNT 일괄 업데이트 -->
    <update id="updateAllViewCount">
        UPDATE TRIPOST
        SET VIEW_COUNT =
            CASE ID
            <foreach collection="tripostViewCountList" item="item">
                WHEN #{item.tripostId.id} THEN #{item.viewCount}
            </foreach>
            END
        WHERE ID IN
        <foreach collection="tripostViewCountList" item="item" open="(" separator="," close=")">
            #{item.tripostId.id}
        </foreach>
    </update>

    <!-- LIKE COUNT 재계산 -->
    <update id="recountAllLikeCountById">
        UPDATE TRIPOST
        SET LIKE_COUNT = (
            SELECT COUNT(*) FROM TRIPOST_LIKE L
            WHERE L.TRIPOST_ID = TRIPOST.ID
        )
        WHERE ID IN
        <foreach collection="tripostIds" item="id" open="(" separator="," close=")">
            #{id.id}
        </foreach>
    </update>

    <!-- COMMENT COUNT 재계산 -->
    <update id="recountCommentCountById">
        UPDATE TRIPOST
        SET COMMENT_COUNT = (
            SELECT COUNT(*) FROM TRIPOST_COMMENT
            WHERE TRIPOST_ID = #{tripostId.id} AND IS_DELETED = FALSE
        )
        WHERE ID = #{id.id}
    </update>

    <!-- 단건 조회 (Tripost) -->
    <select id="findById">
        SELECT
            t.tripost_id        as `tripost_id`,
            t.uid               as `uid`,
            u.name              as `name`,
            t.title             as `title`,
            t.description       as `description`,
            t.content           as `content`,
            t.comment_count     as `comment_count`,
            t.like_count        as `like_count`,
            t.view_count        as `view_count`,
            t.is_deleted        as `is_deleted`,
            t.created_at        as `created_at`,
            t.updated_at        as `updated_at`,
            (
                SELECT
                    JSON_ARRAYAGG(
                        JSON_OBJECT(
                            'id', JSON_OBJECT('id', ws.waypoint_snapshot_id),
                            'attractionId', JSON_OBJECT('id', ws.attraction_id),
                            'images', (
                                SELECT JSON_ARRAYAGG(
                                    JSON_OBJECT(
                                        'imageId', JSON_OBJECT('id', wsi.image_id),
                                        'seq', wsi.seq
                                    )
                                )
                                FROM waypoint_snapshot_image wsi
                                WHERE wsi.waypoint_snapshot_id = ws.waypoint_snapshot_id
                            ),
                            'seq', ws.seq
                        )
                    )
                FROM waypoint_snapshot ws
                WHERE ws.tripost_id = t.tripost_id
            ) AS `waypoints`
        FROM tripost t
        JOIN user u ON t.uid = u.uid
        WHERE t.tripost_id = #{tripostId.id}
    </select>


    <!-- 상세 조회 (TripostDetailDto) -->
    <select id="findTripostDetailById">
        SELECT
            T.ID                as `tripost_id`,
            T.UID               as `uid`,
            U.NAME              as `name`,
            T.TITLE             as `title`,
            T.CONTENT           as `content`,
            T.COMMENT_COUNT     as `comment_count`,
            T.LIKE_COUNT        as `like_count`,
            T.VIEW_COUNT        as `view_count`,
            T.CREATED_AT        as `created_at`,
            T.UPDATED_AT        as `updated_at`,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'id', WS.ID,
                        'attractionId', WS.ATTRACTION_ID,
                        'attractionName', WS.TITLE,
                        'seq', WS.SEQ,
                        <!-- TODO waypoint의 경로 관련 컬럼 추가  -->
                        'images', (
                            SELECT JSON_ARRAYAGG(
                                JSON_OBJECT(
                                    'thumbnailUrl', I.THUMBNAIL_URL,
                                    'imageUrl', I.IMAGE_URL,
                                    'seq', WSI.SEQ
                                )
                            )
                            FROM WAYPOINT_SNAPSHOT_IMAGE WSI JOIN IMAGE i ON WSI.IMAGE_ID = I.ID
                            WHERE WSI.WAYPOINT_SNAPSHOT_ID = WS.ID
                            ORDER BY seq
                        )
                    )
                )
                FROM WAYPOINT_SNAPSHOT WS
                WHERE WS.TRIPOST_ID = T.ID
            )                   as `waypoints`
        FROM TRIPOST T JOIN USER U ON T.UID = U.UID
        WHERE T.ID = #{tripost.id}
    </select>

    <!-- 페이징 목록 조회 -->
    <select id="selectPage">
        SELECT
            T.ID                    as `id`,
            T.UID                   as `uid`,
            U.NAME                  as `name`,
            T.TITLE                 as `title`,
            T.DESCRIPTION           as `description`,
            T.VIEW_COUNT            as `view_count`,
            T.LIKE_COUNT            as `like_count`,
            T.COMMENT_COUNT         as `comment_count`,
            T.CREATED_AT            as `created_at`,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'id', WS.ID,
                        'attractionId', WS.ATTRACTION_ID,
                        'attractionName', WS.TITLE,
                        'seq', WS.SEQ
                        <!-- TODO waypoint의 경로 관련 컬럼 추가  -->
                    )
                )
                FROM WAYPOINT_SNAPSHOT WS
                WHERE WS.TRIPOST_ID = T.ID
            ) AS waypoints,
            (
                SELECT JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'thumbnailUrl', I.THUMBNAIL_URL,
                        'imageUrl', I.IMAGE_URL,
                        'seq', WSI.SEQ
                    )
                )
                FROM WAYPOINT_SNAPSHOT_IMAGE WSI
                JOIN WAYPOINT_SNAPSHOT WS ON WSI.WAYPOINT_ID = WS.ID
                WHERE WS.TRIPOST_ID = T.ID
            )                       as `images`
        FROM TRIPOST T
        JOIN USER U ON T.UID = U.UID
        <where>
            <choose>
                <when test="criteria.type == 'TITLE'">
                    AND T.TITLE LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type == 'CONTENT'">
                    AND T.CONTENT LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type == 'AUTHOR'">
                    AND U.NAME LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
            </choose>
        </where>
        ORDER BY T.CREATED_AT DESC
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <!-- 총 개수 조회 -->
    <select id="selectTotalCount" parameterType="map" resultType="long">
        SELECT COUNT(*)
        FROM TRIPOST T
        <where>
            <choose>
                <when test="criteria.type == 'TITLE'">
                    AND T.TITLE LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type == 'CONTENT'">
                    AND T.CONTENT LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
                <when test="criteria.type == 'AUTHOR'">
                    AND U.NAME LIKE CONCAT('%', #{criteria.query}, '%')
                </when>
            </choose>
        </where>
    </select>

</mapper>
